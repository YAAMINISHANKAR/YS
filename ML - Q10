import warnings
warnings.filterwarnings('ignore')
import numpy as np
data=np.array([1,2,3,6,6,7,10,11])
target=['c','c','x','x','x','c','c','c']
data=data.reshape(-1,1)

from sklearn import preprocessing
le= preprocessing.LabelEncoder()
target_encoded=le.fit_transform(target)

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(data,target_encoded,test_size= 0.5)

from sklearn.neighbors import KNeighborsClassifier
classifier= KNeighborsClassifier(n_neighbors = 3)
classifier.fit(x_train, y_train)

y_pred=classifier.predict(x_test)
print(y_pred)
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
result= confusion_matrix(y_test,y_pred)
print("Confusion Matric:")
print(result)
result1=classification_report(y_test,y_pred)
print("Classification Report:")
print(result1)
result2=accuracy_score(y_test,y_pred)
print("Accuracy:", result2)
